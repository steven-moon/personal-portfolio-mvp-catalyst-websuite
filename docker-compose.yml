services:
  nginx:
    image: nginx:latest
    platform: linux/amd64
    pull_policy: if_not_present
    ports:
      - "${HOST_PORT:-9090}:80"
    volumes:
      - './nginx.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - frontend
      - backend
    networks:
      - portfolio-network

  frontend:
    build:
      context: ./frontend
    platform: linux/amd64
    pull_policy: if_not_present
    environment:
      - VITE_API_URL=http://localhost:${HOST_PORT:-9090}/api
      - NODE_ENV=development
    ports:
      - "8080:8080"
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    depends_on:
      - backend
    networks:
      - portfolio-network
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    platform: linux/amd64
    pull_policy: if_not_present
    ports:
      - "${API_PORT:-3000}:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=portfolio_user
      - DB_PASSWORD=portfolio_password
      - DB_NAME=portfolio_db
      - DB_DIALECT=mysql
      - DB_PROTOCOL=tcp
      - DB_SOCKET=
      - JWT_SECRET=secure_development_secret_key_123
      - LOG_LEVEL=debug
      - NODE_SKIP_DB_CHECK=false
    volumes:
      - './backend:/app'
      - '/app/node_modules'
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for MySQL to be ready...' &&
        sleep 5 &&
        npm run setup-db &&
        node src/scripts/run-seeders.js &&
        npm run dev
      "
    networks:
      - portfolio-network

  db:
    image: mysql:8.0
    platform: linux/amd64
    pull_policy: if_not_present
    ports:
      - "${HOST_DB_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=portfolio_db
      - MYSQL_USER=portfolio_user
      - MYSQL_PASSWORD=portfolio_password
    volumes:
      - portfolio-db-data:/var/lib/mysql
    command: --default-authentication-plugin=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --log-error-suppression-list="MY-013360"
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  portfolio-network:
    driver: bridge

volumes:
  portfolio-db-data: